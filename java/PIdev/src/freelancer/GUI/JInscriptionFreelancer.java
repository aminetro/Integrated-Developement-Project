/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package freelancer.GUI;

import freelancer.connection.DataSource;
import freelancer.dao.classes.FreelancerDAO;
import freelancer.dao.classes.MembreDAO;
import freelancer.entities.Freelancer;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author sou hm
 */
public class JInscriptionFreelancer extends javax.swing.JFrame {
        public final Connection connection;
int x=0;
    /**
     * Creates new form inscriptionfreelancer
     */
    public JInscriptionFreelancer() {
        initComponents();
        setTitle("Inscription Des Freelancers");
    setSize(800,600);
    setResizable(false);
    tf_password.setVisible(false);
    this.setLocationRelativeTo(null);
                         connection = DataSource.getInstance().getConnection();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        bt_valider = new javax.swing.JButton();
        bt_retour = new javax.swing.JButton();
        importer = new javax.swing.JButton();
        Path = new javax.swing.JTextField();
        tf_password = new javax.swing.JPasswordField();
        tf_mail = new javax.swing.JTextField();
        tf_pseudo = new javax.swing.JTextField();
        tf_ville = new javax.swing.JTextField();
        tf_nom = new javax.swing.JTextField();
        tf_prenom = new javax.swing.JTextField();
        tf_pays = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel2.setLayout(null);
        getContentPane().add(jPanel2);
        jPanel2.setBounds(343, 0, 457, 378);

        bt_valider.setText("Valider");
        bt_valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_validerActionPerformed(evt);
            }
        });
        getContentPane().add(bt_valider);
        bt_valider.setBounds(570, 500, 210, 40);

        bt_retour.setText("Retour");
        bt_retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_retourActionPerformed(evt);
            }
        });
        getContentPane().add(bt_retour);
        bt_retour.setBounds(600, 0, 190, 40);

        importer.setText("Importer");
        importer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importerActionPerformed(evt);
            }
        });
        getContentPane().add(importer);
        importer.setBounds(320, 500, 111, 40);
        getContentPane().add(Path);
        Path.setBounds(430, 420, 150, 40);

        tf_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_passwordActionPerformed(evt);
            }
        });
        tf_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_passwordKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_passwordKeyTyped(evt);
            }
        });
        getContentPane().add(tf_password);
        tf_password.setBounds(430, 180, 150, 40);
        getContentPane().add(tf_mail);
        tf_mail.setBounds(430, 260, 150, 40);
        getContentPane().add(tf_pseudo);
        tf_pseudo.setBounds(150, 500, 150, 40);
        getContentPane().add(tf_ville);
        tf_ville.setBounds(150, 420, 150, 40);
        getContentPane().add(tf_nom);
        tf_nom.setBounds(150, 180, 150, 30);
        getContentPane().add(tf_prenom);
        tf_prenom.setBounds(150, 260, 150, 40);
        getContentPane().add(tf_pays);
        tf_pays.setBounds(150, 340, 150, 40);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/freelancer/Images/Freelancer_Inscription.png"))); // NOI18N
        getContentPane().add(jLabel11);
        jLabel11.setBounds(0, 0, 800, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
                  
    
    
    
    
    private void bt_retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_retourActionPerformed

        Jhome a1 = new Jhome();
        setVisible(false);//Masquer la JFrame actuelle
        a1.setVisible(true);//Afficher la JFrame Résultat r1
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_retourActionPerformed

    private void bt_validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_validerActionPerformed
        MembreDAO m=new MembreDAO();

        Freelancer free = new Freelancer(tf_nom.getText(),tf_prenom.getText(),tf_pays.getText(),tf_ville.getText()
            ,tf_pseudo.getText(),tf_password.getText(),tf_mail.getText(),"indisponible");
        FreelancerDAO freel = new FreelancerDAO();
       if(tf_nom.getText().length() ==0)  {
   JOptionPane.showMessageDialog(null, "Veuillez remplir le champ Nom !!","Message",JOptionPane.ERROR_MESSAGE);
   }else 
 if(tf_prenom.getText().length() ==0)  {
   JOptionPane.showMessageDialog(null, "Veuillez remplir le champ Prenom !!","Message",JOptionPane.ERROR_MESSAGE);
  }else
 if(tf_pays.getText().length() ==0)  {
   JOptionPane.showMessageDialog(null, "Veuillez remplir le champ Pays !!","Message",JOptionPane.ERROR_MESSAGE);
  }else

if(tf_ville.getText().length() ==0)  {
   JOptionPane.showMessageDialog(null, "Veuillez remplir le champ Ville !!","Message",JOptionPane.ERROR_MESSAGE);
  }else

if(tf_pseudo.getText().length() ==0 )  {
   JOptionPane.showMessageDialog(null, "Veuillez remplir le champ Pseudo !!","Message",JOptionPane.ERROR_MESSAGE);
 }else
if(tf_mail.getText().length() ==0 )  {
   JOptionPane.showMessageDialog(null, "Veuillez remplir le champ Mail !!","Message",JOptionPane.ERROR_MESSAGE);
}else
if(tf_password.getText().length() ==0)  {
   JOptionPane.showMessageDialog(null, "Veuillez remplir le champ Mot de passe !!","Message",JOptionPane.ERROR_MESSAGE);
  
}
else
    if(m.getId(tf_pseudo.getText()) !=0)  {
   JOptionPane.showMessageDialog(null, "Le Pseudo est deja utilise !!","Message",JOptionPane.ERROR_MESSAGE);
  
}
else
 if(tf_mail.getText().matches("(?:\\w|[\\-_])+(?:\\.(?:\\w|[\\-_])+)*\\@(?:\\w|[\\-_])+(?:\\.(?:\\w|[\\-_])+)+" )) 
 {
   
        freel.insertFreelancer(free);
 try { 
                  
           String requete2="UPDATE membre SET `photo`=? WHERE pseudo='"+tf_pseudo.getText()+"'";
             System.out.println(tf_pseudo.getText());     
       PreparedStatement ps = connection.prepareStatement(requete2);
       ps.setBytes(1,image_person);
           ps.executeUpdate();
           
       
   
    } catch (SQLException ex) {
            Logger.getLogger(FreelancerDAO.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("erreur lors du chargement des depots " + ex.getMessage());
                              System.out.println("********************!!**********exxxx************************************");

    }
        Jhome a1 = new Jhome();
        setVisible(false);
        a1.setVisible(true);
 } else {
      JOptionPane.showMessageDialog(null, "Veuillez vérifier le champ mail !!","Message",JOptionPane.ERROR_MESSAGE);
  
 }
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_validerActionPerformed

    private void importerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importerActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();

        chooser.showOpenDialog(null);
        File f =chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        Path.setText(filename);
        try
        {
            File image=new File (filename);
            FileInputStream fis=new FileInputStream(image);
            ByteArrayOutputStream bos= new ByteArrayOutputStream();
            byte[] buf =new byte[1024];
            for (int readNum;(readNum=fis.read(buf))!=-1;)

            {
                bos.write(buf,0,readNum);
            }
            image_person=bos.toByteArray();

        }
        catch(Exception e )
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_importerActionPerformed

    private void tf_passwordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_passwordKeyTyped

    }//GEN-LAST:event_tf_passwordKeyTyped

    private void tf_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_passwordKeyPressed

    }//GEN-LAST:event_tf_passwordKeyPressed

    private void tf_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_passwordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JInscriptionFreelancer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JInscriptionFreelancer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JInscriptionFreelancer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JInscriptionFreelancer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JInscriptionFreelancer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Path;
    private javax.swing.JButton bt_retour;
    private javax.swing.JButton bt_valider;
    private javax.swing.JButton importer;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField tf_mail;
    private javax.swing.JTextField tf_nom;
    private javax.swing.JPasswordField tf_password;
    private javax.swing.JTextField tf_pays;
    private javax.swing.JTextField tf_prenom;
    private javax.swing.JTextField tf_pseudo;
    private javax.swing.JTextField tf_ville;
    // End of variables declaration//GEN-END:variables

public ImageIcon format =null;
String filename=null;
byte[] image_person=null;
}
