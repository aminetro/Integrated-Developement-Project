/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package freelancer.GUI;

import freelancer.connection.DataSource;
import freelancer.dao.classes.AdministrateurDAO;
import freelancer.dao.classes.FreelancerDAO;
import freelancer.entities.Administrateur;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Amine
 */
public class JAdminPerso extends javax.swing.JFrame {
String pseudo;
        public final Connection connection;

int id;
    /**
     * Creates new form JAdminPerso
     */
    public JAdminPerso(String pseudo) {
        initComponents();
        setTitle("Profile Administrateur");
    setSize(800,600);
    setResizable(false);this.setLocationRelativeTo(null);
                                 connection = DataSource.getInstance().getConnection();

        this.pseudo=pseudo;
        tf_logged.setText(pseudo);
        AdministrateurDAO admin = new AdministrateurDAO();
        Administrateur a=new Administrateur();
        a=admin.findAdministrateurByPseudo(pseudo);
        tf_nom.setText(a.getNom());
        tf_prenom.setText(a.getPrenom());
        tf_pays.setText(a.getPays());
        tf_ville.setText(a.getVille());
        tf_pseudo.setText(a.getPseudo());
        tf_password.setText(a.getPassword());
        tf_mail.setText(a.getMail());
        id=a.getId();
         try {String sql="SELECT photo FROM membre WHERE pseudo='"+pseudo+"'";
           
           Statement statement = connection
                    .createStatement();
             ResultSet rs = statement.executeQuery(sql);
               while (rs.next()){
 
                   System.out.println(rs);
                   
              byte[] imagedata=rs.getBytes("photo");
                format=new ImageIcon(imagedata);
                
                
                
                jl_photo.setIcon(format);
                jl_photo.setSize(200,200);
                
                
               jl_photo.setHorizontalAlignment(jl_photo.CENTER);
         
               
                jl_photo.setVerticalAlignment(jl_photo.CENTER);
              
                }
              }
            
            
            
        
        catch(Exception e)
        {  e.printStackTrace();  }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tf_logged = new javax.swing.JTextField();
        tf_nom = new javax.swing.JTextField();
        tf_prenom = new javax.swing.JTextField();
        tf_pays = new javax.swing.JTextField();
        tf_ville = new javax.swing.JTextField();
        tf_pseudo = new javax.swing.JTextField();
        tf_password = new javax.swing.JPasswordField();
        tf_mail = new javax.swing.JTextField();
        bt_retour = new javax.swing.JButton();
        bt_valider = new javax.swing.JButton();
        Path = new javax.swing.JTextField();
        bt_importer = new javax.swing.JButton();
        jl_photo = new javax.swing.JLabel();
        bt_capturer = new javax.swing.JButton();
        bt_logout = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setText("Interface Administrateur");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 90, 118, 14);

        tf_logged.setEditable(false);
        getContentPane().add(tf_logged);
        tf_logged.setBounds(110, 110, 102, 20);
        getContentPane().add(tf_nom);
        tf_nom.setBounds(150, 190, 150, 30);
        getContentPane().add(tf_prenom);
        tf_prenom.setBounds(150, 300, 150, 30);
        getContentPane().add(tf_pays);
        tf_pays.setBounds(150, 400, 150, 30);
        getContentPane().add(tf_ville);
        tf_ville.setBounds(150, 510, 150, 30);
        getContentPane().add(tf_pseudo);
        tf_pseudo.setBounds(430, 190, 150, 30);

        tf_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_passwordActionPerformed(evt);
            }
        });
        getContentPane().add(tf_password);
        tf_password.setBounds(430, 300, 150, 30);
        getContentPane().add(tf_mail);
        tf_mail.setBounds(430, 410, 150, 30);

        bt_retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_retourActionPerformed(evt);
            }
        });
        getContentPane().add(bt_retour);
        bt_retour.setBounds(590, 0, 60, 50);

        bt_valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_validerActionPerformed(evt);
            }
        });
        getContentPane().add(bt_valider);
        bt_valider.setBounds(590, 530, 190, 40);
        getContentPane().add(Path);
        Path.setBounds(640, 340, 110, 30);

        bt_importer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_importerActionPerformed(evt);
            }
        });
        getContentPane().add(bt_importer);
        bt_importer.setBounds(590, 450, 190, 40);
        getContentPane().add(jl_photo);
        jl_photo.setBounds(580, 110, 200, 200);

        bt_capturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_capturerActionPerformed(evt);
            }
        });
        getContentPane().add(bt_capturer);
        bt_capturer.setBounds(590, 380, 190, 50);

        bt_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_logoutActionPerformed(evt);
            }
        });
        getContentPane().add(bt_logout);
        bt_logout.setBounds(670, 0, 130, 50);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/freelancer/Images/Admin_Perso.png"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(0, 0, 800, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_passwordActionPerformed

    private void bt_validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_validerActionPerformed
        Administrateur ad = new Administrateur(tf_nom.getText(), tf_prenom.getText(), tf_pays.getText(),
                tf_ville.getText(),tf_pseudo.getText(), tf_password.getText(), tf_mail.getText());
        System.out.println("----"+tf_nom.getText());
        AdministrateurDAO admin=new AdministrateurDAO();
        admin.updateAdministrateur(ad, id);
        
        try { 
                  
           String requete2="UPDATE membre SET `photo`=? WHERE pseudo='"+tf_pseudo.getText()+"'";
             System.out.println(tf_pseudo.getText());     
       PreparedStatement ps = connection.prepareStatement(requete2);
       ps.setBytes(1,image_person);
           ps.executeUpdate();
           
       
   
    } catch (SQLException ex) {
            Logger.getLogger(FreelancerDAO.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("erreur lors du chargement des depots " + ex.getMessage());
                              System.out.println("********************!!**********exxxx************************************");

    }
        JAdminPerso jj = new JAdminPerso(tf_pseudo.getText());
        setVisible(false);
        jj.setVisible(true);
    }//GEN-LAST:event_bt_validerActionPerformed

    private void bt_retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_retourActionPerformed
        JAdminProfile j=new JAdminProfile(pseudo);
        setVisible(false);
        j.setVisible(true);
    }//GEN-LAST:event_bt_retourActionPerformed

    private void bt_importerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_importerActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();

        chooser.showOpenDialog(null);
        File f =chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        Path.setText(filename);
        try
        {
            File image=new File (filename);
            FileInputStream fis=new FileInputStream(image);
            ByteArrayOutputStream bos= new ByteArrayOutputStream();
            byte[] buf =new byte[1024];
            for (int readNum;(readNum=fis.read(buf))!=-1;)

            {
                bos.write(buf,0,readNum);
            }
            image_person=bos.toByteArray();

        }
        catch(Exception e )
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_bt_importerActionPerformed

    private void bt_capturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_capturerActionPerformed
        SnaPshot2 p= new SnaPshot2();
        p.setVisible(true);
    }//GEN-LAST:event_bt_capturerActionPerformed

    private void bt_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_logoutActionPerformed
        Jhome j = new Jhome();
        setVisible(false);
        j.setVisible(true);
    }//GEN-LAST:event_bt_logoutActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
 bt_capturer.setBorderPainted(false); 
bt_capturer.setContentAreaFilled(false); 
bt_capturer.setFocusPainted(false); 
bt_capturer.setOpaque(false);

 bt_importer.setBorderPainted(false); 
bt_importer.setContentAreaFilled(false); 
bt_importer.setFocusPainted(false); 
bt_importer.setOpaque(false);

 bt_logout.setBorderPainted(false); 
bt_logout.setContentAreaFilled(false); 
bt_logout.setFocusPainted(false); 
bt_logout.setOpaque(false);

bt_retour.setBorderPainted(false); 
bt_retour.setContentAreaFilled(false); 
bt_retour.setFocusPainted(false); 
bt_retour.setOpaque(false); 

bt_valider.setBorderPainted(false); 
bt_valider.setContentAreaFilled(false); 
bt_valider.setFocusPainted(false); 
bt_valider.setOpaque(false);
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JAdminPerso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JAdminPerso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JAdminPerso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JAdminPerso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Path;
    private javax.swing.JButton bt_capturer;
    private javax.swing.JButton bt_importer;
    private javax.swing.JButton bt_logout;
    private javax.swing.JButton bt_retour;
    private javax.swing.JButton bt_valider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jl_photo;
    private javax.swing.JTextField tf_logged;
    private javax.swing.JTextField tf_mail;
    private javax.swing.JTextField tf_nom;
    private javax.swing.JPasswordField tf_password;
    private javax.swing.JTextField tf_pays;
    private javax.swing.JTextField tf_prenom;
    private javax.swing.JTextField tf_pseudo;
    private javax.swing.JTextField tf_ville;
    // End of variables declaration//GEN-END:variables
public ImageIcon format =null;
String filename=null;
byte[] image_person=null;

}
